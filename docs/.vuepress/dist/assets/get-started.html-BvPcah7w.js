import{_ as s,c as n,a,o as t}from"./app-D2hGKs0u.js";const o={};function i(r,e){return t(),n("div",null,e[0]||(e[0]=[a(`<h1 id="quick-start" tabindex="-1"><a class="header-anchor" href="#quick-start"><span>Quick start</span></a></h1><p align="center"><img src="https://i.postimg.cc/vBCQ1WZx/echoshare-mobile-left.png" width="200" alt="just-logo"></p><p>Echoshare is an out-of-the-box and highly customizable configuration-enabled online media sharing application.</p><p>Based on WebRTC technology, Echoshare provides efficient, low-latency online screen sharing that simultaneously transmits screen shots, camera video streams, microphone audio streams, and system audio to meet diverse remote collaboration needs.</p><h2 id="usage-instructions" tabindex="-1"><a class="header-anchor" href="#usage-instructions"><span>Usage Instructions</span></a></h2><ol><li>To ensure EchoShare functions correctly, please verify that your browser supports WebRTC technology. Upon initial use, the system will request permission to access your camera and microphone. Denying these permissions may result in limited functionality. You can review or modify these permissions in your browser&#39;s website settings.</li></ol><p><img src="https://i.postimg.cc/5tjjsgYN/image.png" alt="web permissions"></p><ol start="2"><li>Due to mobile browser limitations, when using EchoShare on a mobile phone or tablet, you can only share your camera and microphone; screen sharing is not currently available. However, media reception is unaffected. Therefore, you can use EchoShare to transmit audio from a computer to a mobile device for playback, even if the computer itself lacks audio output capabilities.</li></ol><h2 id="functional-features" tabindex="-1"><a class="header-anchor" href="#functional-features"><span>Functional features</span></a></h2><h3 id="core-functionality" tabindex="-1"><a class="header-anchor" href="#core-functionality"><span>Core functionality</span></a></h3><ul><li>üñ•Ô∏è <strong>Screen Sharing</strong>: Show your screen in real time for more intuitive communication.</li><li>üìπ <strong>Camera sharing</strong>: face-to-face communication to enhance the sense of presence in remote collaboration.</li><li>üîä <strong>AUDIO SHARING</strong>: Clearly conveys system sound to ensure a complete audio experience.</li><li>üéôÔ∏è <strong>Microphone Sharing</strong>: real-time voice communication for smoother exchanges.</li></ul><h3 id="‚ú®-enhancements" tabindex="-1"><a class="header-anchor" href="#‚ú®-enhancements"><span>‚ú® Enhancements</span></a></h3><ul><li>‚è≥ <strong>Local History</strong>: easily review shared records for convenience.</li><li>üíì <strong>Heartbeat detection</strong>: real-time detection of connection status.</li><li>üîó <strong>Customize webhook</strong>: Flexible integration with other systems for automated workflows.</li><li>üîÑ <strong>Automatic pull after interruption</strong>: automatic recovery even when the network is interrupted, ensuring continuity of sharing.</li><li>üì± <strong>Support PWA</strong>: Use it like a native app for a smoother experience.</li><li>üåç <strong>Multi-language support</strong>: meet the needs of global users, communication without barriers.</li><li>üìê <strong>Responsive design</strong>: adapts to a wide range of devices, so you can work efficiently anytime, anywhere.</li></ul><h2 id="use-it-now" tabindex="-1"><a class="header-anchor" href="#use-it-now"><span>Use it now</span></a></h2><h3 id="online-use" tabindex="-1"><a class="header-anchor" href="#online-use"><span>Online use</span></a></h3><p>Echoshare is deployed through Vercel, so you can experience it directly online: <a href="https://echoshare.site" target="_blank" rel="noopener noreferrer">https://echoshare.site</a>.</p><p>Vercel is a powerful cloud services platform that supports rapid deployment of static and dynamic websites. Seamlessly integrated with GitHub, Vercel automates deployment after code push, while providing global CDN acceleration and HTTPS auto-configuration to ensure fast and secure access. With Vercel&#39;s efficient deployment capabilities, Echoshare provides users with a smooth online experience that meets a wide variety of usage needs.</p><p>If you would also like to deploy on Vercel, you can do so by clicking the button below:</p><p><a href="https://vercel.com/new/clone?repository-url=https://github.com/echoshare/echoshare" target="_blank" rel="noopener noreferrer"><img src="https://vercel.com/button" alt="Deploy with Vercel"></a></p><h3 id="local-deployment" tabindex="-1"><a class="header-anchor" href="#local-deployment"><span>Local deployment</span></a></h3><p>This application is a completely front-end based project, so it can be easily deployed locally by following these steps</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># Clone the project address</span></span>
<span class="line"><span class="token function">git</span> clone https://github.com/echoshare/echoshare.git</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Make sure you have Node.js and npm (or yarn) installed on your system. Then run the following command to install the project dependencies:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># Install dependencies and compile</span></span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span></span>
<span class="line"><span class="token function">npm</span> run build</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="application-configuration" tabindex="-1"><a class="header-anchor" href="#application-configuration"><span>Application configuration</span></a></h2><p>echoshare works by default without any configuration, but you can customize the configuration as needed, all the configuration items are under the <code>/~settings</code> route.</p><p><img src="https://i.postimg.cc/ZntKjm64/image.pngg" alt="Configuration page"></p><h3 id="customize-peer-nodes" tabindex="-1"><a class="header-anchor" href="#customize-peer-nodes"><span>Customize peer nodes</span></a></h3><p>echoshare uses <a href="https://github.com/peers/peerjs-server" target="_blank" rel="noopener noreferrer">peer-server</a> as the WebRTC API and <code>https://0.peerjs.com</code> as the peer node by default.</p><p>If you want to use a customized peer node, you can enter the corresponding server address in the Settings page.</p><p>A sample configuration is shown below:</p><ol><li>Node located under port 443</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">https://your.server.com/custom-path</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>Nodes are located under other ports</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">https://your.server.com:3456/custom-path</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>Node configured with <a href="https://peerjs.com/docs/#peer-options-key" target="_blank" rel="noopener noreferrer">key attribute</a></li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">https://your.server.com:3456/custom-path?key=your-key</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="customizing-the-stun-turn-server" tabindex="-1"><a class="header-anchor" href="#customizing-the-stun-turn-server"><span>Customizing the STUN/TURN server</span></a></h2><p>In special cases, you also need to configure the STUN/TURN server, as shown in the following example:</p><h3 id="configuration-interface-with-stun-server" tabindex="-1"><a class="header-anchor" href="#configuration-interface-with-stun-server"><span>Configuration interface with STUN server</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">https://your-stun-api.com</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Then click the button below, echoshare will get the STUN server address through this interface and save it in json format.</p><h3 id="manually-enter-the-configuration-in-json-format" tabindex="-1"><a class="header-anchor" href="#manually-enter-the-configuration-in-json-format"><span>manually enter the configuration in json format</span></a></h3><p>Enter and click save, just enter the configuration in array format.</p><h2 id="customize-webhook" tabindex="-1"><a class="header-anchor" href="#customize-webhook"><span>Customize webhook</span></a></h2><p>echoshare provides the ability to customize webhook, you can enter the corresponding webhook address in <code>/~webhook</code> route. With webhooks, you can automate workflows, such as sending notifications when a share ends, pulling share records automatically, and so on.</p><h3 id="customize-data" tabindex="-1"><a class="header-anchor" href="#customize-data"><span>Customize data</span></a></h3><p><img src="https://i.postimg.cc/P5JJXTzr/image.png" alt="custom data"></p><p>echoshare carries the following content that you fill in <strong>custom data</strong> in the webhook for your convenience. All custom data is carried under the <code>custom</code> attribute in all echoshare requests.</p><h3 id="pull-the-uid-webhook" tabindex="-1"><a class="header-anchor" href="#pull-the-uid-webhook"><span>pull the UID webhook</span></a></h3><p>The webhook itself is a GET request, and you can get the shared UID in the destination address, which is mainly used for receiving media.</p><p>Note that the destination must be a URL that provides a GET interface and the return data must contain a <code>uid</code> entry, otherwise echoshare will not resolve the UID.</p><p>echoshare The parameters carried in this request:</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;hook&quot;</span><span class="token operator">:</span> <span class="token string">&quot;on-get&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;action&quot;</span><span class="token operator">:</span> <span class="token string">&quot;receive&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;timestamp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{current-timestamp}&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;custom&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;your-custom-data&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{your-custom-data}&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="push-uid-webhook" tabindex="-1"><a class="header-anchor" href="#push-uid-webhook"><span>push UID webhook</span></a></h3><p>The webhook itself is a POST request. When you share a stream and generate a UID credit, echoshare sends a POST request to the destination address, which looks like this:</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;uid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{your-uid}&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;hook&quot;</span><span class="token operator">:</span> <span class="token string">&quot;on-post&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;action&quot;</span><span class="token operator">:</span> <span class="token string">&quot;share&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;timestamp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{current-timestamp}&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;custom&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;your-custom-data&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{your-custom-data}&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="successful-webhooks-for-media-streaming" tabindex="-1"><a class="header-anchor" href="#successful-webhooks-for-media-streaming"><span>Successful webhooks for media streaming</span></a></h3><p>The webhook itself is a POST request. When you successfully share or receive a stream, echoshare sends a POST request to the destination address as follows:</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;uid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{your-uid}&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;result&quot;</span><span class="token operator">:</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;hook&quot;</span><span class="token operator">:</span> <span class="token string">&quot;on-success&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;action&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{share | receive}&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;timestamp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{current-timestamp}&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;custom&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;your-custom-data&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{your-custom-data}&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="failed-webhook-for-sending-and-receiving-media-streams" tabindex="-1"><a class="header-anchor" href="#failed-webhook-for-sending-and-receiving-media-streams"><span>Failed webhook for sending and receiving media streams</span></a></h3><p>The webhook itself is a POST request. When you fail to share or receive a media stream, echoshare sends a POST request to the destination address as follows:</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;uid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{your-uid}&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;result&quot;</span><span class="token operator">:</span> <span class="token string">&quot;fail&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;hook&quot;</span><span class="token operator">:</span> <span class="token string">&quot;on-fail&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;action&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{share | receive}&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;timestamp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{current-timestamp}&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;custom&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;your-custom-data&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{your-custom-data}&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="routing-parameters" tabindex="-1"><a class="header-anchor" href="#routing-parameters"><span>Routing parameters</span></a></h2><p>echoshare provides routing parameters for users to customize their experience.</p><h3 id="automatic-full-screen-media-reception-function-üòç" tabindex="-1"><a class="header-anchor" href="#automatic-full-screen-media-reception-function-üòç"><span>Automatic full-screen media reception function üòç</span></a></h3><p>This feature is mainly used to share media as a full-screen video and audio media stream, which can be used as a media source for virtual cameras. In particular, the media can be directly viewed and used by switching the route of receiving media from <code>receive</code> to <code>view</code>, thus meeting the needs of diverse application scenarios.</p><p>For example, <code>https://echoshare.site/~receive?uid=your-uid</code> can be replaced with: <code>https://echoshare.site/~view?uid=your-uid</code> to realize the automatic full screen media receiving function.</p><h3 id="autoplay" tabindex="-1"><a class="header-anchor" href="#autoplay"><span>Autoplay</span></a></h3><p>If you want autoplay on incoming media, you can add the <code>autoplay</code> parameter to the route for incoming media.</p><p>For example, <code>https://echoshare.site/~receive?uid=your-uid</code> can be replaced with: <code>https://echoshare.site/~receive?uid=your-uid&amp;autoplay=true</code> to realize the autoplay function.</p>`,71)]))}const c=s(o,[["render",i],["__file","get-started.html.vue"]]),p=JSON.parse('{"path":"/get-started.html","title":"Quick start","lang":"English","frontmatter":{},"headers":[{"level":2,"title":"Usage Instructions","slug":"usage-instructions","link":"#usage-instructions","children":[]},{"level":2,"title":"Functional features","slug":"functional-features","link":"#functional-features","children":[{"level":3,"title":"Core functionality","slug":"core-functionality","link":"#core-functionality","children":[]},{"level":3,"title":"‚ú® Enhancements","slug":"‚ú®-enhancements","link":"#‚ú®-enhancements","children":[]}]},{"level":2,"title":"Use it now","slug":"use-it-now","link":"#use-it-now","children":[{"level":3,"title":"Online use","slug":"online-use","link":"#online-use","children":[]},{"level":3,"title":"Local deployment","slug":"local-deployment","link":"#local-deployment","children":[]}]},{"level":2,"title":"Application configuration","slug":"application-configuration","link":"#application-configuration","children":[{"level":3,"title":"Customize peer nodes","slug":"customize-peer-nodes","link":"#customize-peer-nodes","children":[]}]},{"level":2,"title":"Customizing the STUN/TURN server","slug":"customizing-the-stun-turn-server","link":"#customizing-the-stun-turn-server","children":[{"level":3,"title":"Configuration interface with STUN server","slug":"configuration-interface-with-stun-server","link":"#configuration-interface-with-stun-server","children":[]},{"level":3,"title":"manually enter the configuration in json format","slug":"manually-enter-the-configuration-in-json-format","link":"#manually-enter-the-configuration-in-json-format","children":[]}]},{"level":2,"title":"Customize webhook","slug":"customize-webhook","link":"#customize-webhook","children":[{"level":3,"title":"Customize data","slug":"customize-data","link":"#customize-data","children":[]},{"level":3,"title":"pull the UID webhook","slug":"pull-the-uid-webhook","link":"#pull-the-uid-webhook","children":[]},{"level":3,"title":"push UID webhook","slug":"push-uid-webhook","link":"#push-uid-webhook","children":[]},{"level":3,"title":"Successful webhooks for media streaming","slug":"successful-webhooks-for-media-streaming","link":"#successful-webhooks-for-media-streaming","children":[]},{"level":3,"title":"Failed webhook for sending and receiving media streams","slug":"failed-webhook-for-sending-and-receiving-media-streams","link":"#failed-webhook-for-sending-and-receiving-media-streams","children":[]}]},{"level":2,"title":"Routing parameters","slug":"routing-parameters","link":"#routing-parameters","children":[{"level":3,"title":"Automatic full-screen media reception function üòç","slug":"automatic-full-screen-media-reception-function-üòç","link":"#automatic-full-screen-media-reception-function-üòç","children":[]},{"level":3,"title":"Autoplay","slug":"autoplay","link":"#autoplay","children":[]}]}],"git":{"updatedTime":1744694796000,"contributors":[{"name":"shawroger","username":"shawroger","email":"roger2000s@outlook.com","commits":4,"url":"https://github.com/shawroger"}],"changelog":[{"hash":"b3648f8782c881bba7fe295046759feea154c88d","time":1744694796000,"email":"roger2000s@outlook.com","author":"shawroger","message":"change logo"},{"hash":"4b7ebfa6dc12beac42662bcc83f830987568284e","time":1742542924000,"email":"roger2000s@outlook.com","author":"shawroger","message":"set the path of each languages correctly"},{"hash":"a42b1a166b42d857dd96023fee24eb5a6ac47dcd","time":1742359326000,"email":"roger2000s@outlook.com","author":"shawroger","message":"add usage"},{"hash":"c0cebd358e4a5e2565408ab4adb06666e7a10c75","time":1742304123000,"email":"roger2000s@outlook.com","author":"shawroger","message":"init"}]},"filePathRelative":"get-started.md"}');export{c as comp,p as data};
